# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
		- name: Ruby gem cache
			uses: actions/cache@v1
			with:
				path: vendor/bundle
				key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
				restore-keys: |
					${{ runner.os }}-gems-
		- name: Install gems
			run: |
				bundle config path vendor/bundle
				bundle install --jobs 4 --retry 3

		- name: Setup Node
			uses: actions/setup-node@v1
			with:
				node-version: 10.13.0
		- name: Find yarn cache location
			id: yarn-cache
			run: echo "::set-output name=dir::$(yarn cache dir)"
		- name: JS package cache
			uses: actions/cache@v1
			with:
				path: ${{ steps.yarn-cache.outputs.dir }}
				key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
				restore-keys: |
					${{ runner.os }}-yarn-
		- name: Install packages
			run: |
				yarn install --pure-lockfile
    - name: Compile Assets
      shell: bash
      run: rails assets:precompile
    # Heroku login
    - name: Login to Heroku Container registry
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login
    - name: Build and push
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web 
    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
